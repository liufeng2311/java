************************************************
*** 使用版本  Linux CentOS 7   redis  5.0.5  ***
************************************************


************************************************
***                 redis安装                ***
************************************************
1.安装redis的编译器gcc-c++(redis使用C++写的)
	yum install gcc                  安装gcc包
	yum install gcc-c++              安装gcc-c++包(如果不想安装整个gcc包的话执行该命令即可,否则执行上面命令即可)
2.下载(上传)压缩包并解压
	tar -zxvf redis-5.0.5.tar.gz
3.进入解压后的目录进行编译(编译完成后在src目录中已经存在启动脚本,可以不执行第四步)
	make
4.安装(将src目录下的可执行脚本放在指定目录下)(src目录下有过多的与执行脚本无关的文件,make install的作用就是提取src目录下的执行文件,存放到指定路径下的bin目录中)
	cd src &&make install PREFIX=/usr/local/redis
	
************************************************
***                 安装问题                 ***
************************************************
1.安装过程中第三步和第四步可以合并
	make&&make install                 执行完make后,会自动检测并进入src下执行make install,执行完会将执行文件存放到/usr/local/bin(此时可以在任意位置执行)
	PREFIX=/usr/local/redis            执行存放执行文件的位置,会在指定的目录后添加bin目录,bin目录里是可执行文件,默认存放到/usr/local/bin(程序的默认启动路径,也就是为什么PATH中会有该路径的定义)(指定完目录之后需要添加PATH路径才能在任意位置执行)
2.启动会报错,按提示设置相关属性即可(以root用户运行)
	sysctl vm.overcommit_memory=1
	echo never > /sys/kernel/mm/transparent_hugepage/enabled
	
************************************************
***                 常用命令                 ***
************************************************
1.将redis安装路径添加到PATH,默认安装路径就在PATH中,当使用PREFIX指定路径时,需要添加(.bashrc文件中添加redis的bin路径),当字符串中含有$时,需要加引号,否则会被解析为对应的变量值
	echo export REDIS_HOME=/usr/local/redis  >> /home/liufeng/.bashrc
	echo 'export PATH=$PATH:$REDIS_HOME/bin'  >> /home/liufeng/.bashrc
2.启动redis
	redis-server                                不指定启动文件时,总是按照默认设置启动(该启动方式无意义,使用下面的启动)                        
	redis-server /redis.conf                    指定启动时加载的配置文件,配置文件的位置视具体的情况而定
3.关闭redis
	redis-cli shutdown

************************************************
***                 配置文件                 ***
************************************************
1.习惯将redis的配置文件和安装路径放到一起
	mv redis.conf /usr/local/redis
2.表示Redis的启动方式,默认值no,不支持后台启动,我们需要改为yes
	daemonize yes
3.表示允许连接redis所在服务器的网卡IP,一个服务器可能有多张网卡,只有请求绑定的网卡IP才能访问redis,可同时绑定本服务器多个网卡,不设置表示本机所有网卡都可访问
	bind 127.0.0.1             表示只有本机可以访问,
	bind 192.168.64.103        设置本机的对外IP,
	bind 0.0.0.0               我们可以通过设置IP为0.0.0.0 或者#bind属性使该服务器所有网口均可访问
4.表示redis的认证信息,相当于密码,不设置相当于不需要认证
	requirepass 123456
5.表示是否开启保护,默认值yes表示开启,当没有设置认证密码时,该属性开启表示只允许北极登录
	protected-mode yes
6.redis登录认证的流程
	requirepass打开时,进行密码验证,没有打开时,当protected-mode 为 yes时表示只允许本机登录,no时表示都可以登录
	





************************************************
***                 redis-cl                 ***
************************************************
1.解决客户端中文乱码问题
redis-cli --raw




************************************************
***          高可用(一主二从三哨兵)          ***
************************************************
1.配置redis.conf文件
	主redis不用修改
	从redis添加如下属性
	slaveof 172.31.175.142 6379        在从redis位置文件中添加指向主redis的配置
2.配置sentinel.conf文件(哨兵)
	sentinel monitor mymaster 172.31.175.142 6379 2      
	格式 sentinel monitor  主redis名 ip port number
	主redis名:我们自定义即可
	ip ：主redis  IP
	port：主redis  port
	number：通过票数,认定主redis宕机的票数超过该票数，认定服务宕机
3.启动三个redis和三个哨兵服务

	

	